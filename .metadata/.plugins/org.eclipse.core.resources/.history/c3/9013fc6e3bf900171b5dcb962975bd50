package Projekt;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Rectangle;
import java.awt.image.BufferedImage;
import java.util.Random;

public class BossEnemy extends GameObject{

	private handler handle;
	
	private int timer = 0;
	private int timer2 = 50;
	Random r = new Random();
	protected Sheet sSheet = new Sheet(Game.sSheetBS);
	private BufferedImage b_skin;
	
	public BossEnemy(float x, float y, ID id, handler handle) {
		super(x, y, id);
		// TODO Auto-generated constructor stub
		this.handle = handle;
		velY = 0;
		velX = 2;
		health = 100;
	}
	
	@Override
	public Rectangle getBounds() {
		// TODO Auto-generated method stub
		return new Rectangle((int)x,(int)y,100,100); // returning the current hitbox
	}
	
	

	@Override
	public void tick() {
		// TODO Auto-generated method stub
		animationTimer++;
		if(animationTimer>15)animationTimer=0;
		x +=velX;
		y +=velY;
		
		if(timer <= 0) velX = 0;
		else timer--;
		
		if(timer<= 0) timer2--;
		if(timer2<=0) {
			if(velY == 0) velY = 5;
			int spawn = r.nextInt(10);
			if(spawn == 0) handle.addObject(new BossEnemyBullet((int)x, (int)y, ID.Enemy,handle));
			
		}
		
		
		//if(x <= 0 || x>= Game.WIDTH - 32) velX *= -1;
		if(y <= 0 || y>= Game.HEIGHT - 48) velY *= -1;
		
		//if(health == 0) {
		//	handle.removeObject(this);
		//}
	}

	@Override
	public void render(Graphics g) {
		// TODO Auto-generated method stub
		g.setColor(Color.red);
		g.fillRect((int)x, (int)y, 100, 100);
		
		g.setColor(Color.green);
		//g.fillRect(1200, 600-(int)health * 3, 40, (int)health * 3);
		g.fillRect(430, 870, (int)health * 3, 40);
		

		if(animationTimer<=7)b_skin = sSheet.getImage(1, 1, 128, 96);
		if(animationTimer>7)b_skin = sSheet.getImage(1, 5, 128, 96);
		b_skin = sSheet.getImage(1, 1, 96, 96);
		g.drawImage(b_skin,(int)x,(int)y,null);
		
		
	}

	
}
