package Projekt;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Rectangle;
import java.util.Random;

public class BossSpawner extends GameObject{

	private handler handle;
	
	private int timer = 150;
	private int timer2 = 50;
	private int timer3 = 10;
	Random r = new Random();
	
	
	public BossSpawner(float x, float y, ID id, handler handle) {
		super(x, y, id);
		// TODO Auto-generated constructor stub
		this.handle = handle;
		velY = 0;
		velX = -4;
		health = 100;
	}
	
	@Override
	public Rectangle getBounds() {
		// TODO Auto-generated method stub
		return new Rectangle((int)x,(int)y,200,200); // returning the current hitbox 
	}
	
	

	@Override
	public void tick() {
		// TODO Auto-generated method stub
		x +=velX;
		y +=velY;
		
		if(timer <= 0) velX = 0;
		else timer--;
		
		if(timer<= 0) timer2--;
		if(timer2<=0) {
			if(velY == 0) velY = 5;
			//int spawn = r.nextInt(30);
			//if(spawn == 0) handle.addObject(new SmartEnemyV2((int)x+100, (int)y+100, ID.Enemy,handle, 1));
			timer3--;
		}
		if(timer3<=0) {
			handle.addObject(new SmartEnemyV2((int)x+100, (int)y+100, ID.Enemy,handle, 1));
			timer3 = 100;
		}
		
		//if(x <= 0 || x>= Game.WIDTH - 32) velX *= -1;
		if(y <= 0 || y>= Game.HEIGHT - 48) velY *= -1;
		if(health !=0) 
		if(health == 0) {
			handle.removeObject(this);
		}
	}

	@Override
	public void render(Graphics g) {
		// TODO Auto-generated method stub
		g.setColor(Color.red);
		g.fillRect((int)x, (int)y, 200, 200);
		
		
		g.setColor(Color.red);
		g.fillRect(1100, 200, 40, 320);
		
	}

	
}
