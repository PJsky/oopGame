package Projekt;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Rectangle;
import java.awt.image.BufferedImage;
import java.util.Random;

public class Helicopter extends GameObject{
	
	Random r = new Random();
	private handler handle;
	protected int timer1=r.nextInt(200)+150,timer2=66;
	protected boolean thrown=false;
	protected Sheet sSheet = new Sheet(Game.sSheetH);
	private BufferedImage h_skin;
	int weapontype;
	public Helicopter(float x, float y, ID id, handler handle) {
		super(x, y, id);
		// TODO Auto-generated constructor stub
		this.handle = handle;
		velY = 0;
		velX = -4;
	}
	
	@Override
	public Rectangle getBounds() {
		// TODO Auto-generated method stub
		return new Rectangle((int)x,(int)y,32,48); // returning the current hitbox
	}
	
	

	@Override
	public void tick() {
		// TODO Auto-generated method stub
		animationTimer++;
		if(animationTimer>30)animationTimer=0;
		x +=velX;
		y +=velY;
		
		timer1--;
		if(timer1<=0) {
			if(!thrown) {
				handle.addObject(new WeaponPreview(x+50,16, ID.WeaponPreview, handle,r.nextInt(3)+2));
				thrown = true;
			}
			for (int i = 0; i<handle.object.size(); i++) {
				GameObject tempObject = handle.object.get(i);
				
				
				if(tempObject.getID() == ID.WeaponPreview) {
					tempObject.setVelY(80);
					weapontype=tempObject.weapon;
					if(timer2<=0)	
						{handle.removeObject(tempObject);
						handle.addObject(new Weapon(x+100,y+40, ID.Weapon, handle,weapontype));
						}
					}
				

			}
			velX = 0;
			timer2--;
		}
		

		
		
		if(timer2<=0)velX = -4;
	}

	@Override
	public void render(Graphics g) {
		// TODO Auto-generated method stub
		
		if(animationTimer<=7)h_skin = sSheet.getImage(1, 4, 128, 96);
		if(animationTimer>7)h_skin = sSheet.getImage(3, 4, 128, 96);
		if(animationTimer>15)h_skin = sSheet.getImage(1, 4, 128, 96);
		if(animationTimer>23)h_skin = sSheet.getImage(3, 4, 128, 96);
		//g.setColor(Color.gray);
		g.drawImage(prz_skin,(int)x,(int)y,null);

		//g.fillRect((int)x, (int)y, 200, 80);
		
	}

	
}
