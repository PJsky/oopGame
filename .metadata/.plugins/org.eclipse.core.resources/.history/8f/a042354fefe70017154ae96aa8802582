package Projekt;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Rectangle;

public class Player extends GameObject {

	handler handle;
	private static boolean damaged = false;
	private static int iFrame;
	
	public Player(float x, float y, ID id, handler handle, Color col) {
		super(x, y, id);
		// TODO Auto-generated constructor stub
		//velX =1;
		this.handle = handle;
		health = 3;
		this.col = col;
	}
	
	@Override
	public Rectangle getBounds() {
		// TODO Auto-generated method stub
		return new Rectangle((int)x,(int)y,32,48); // returning the current hitbox
	}
	

	
	
	
	@Override
	public void tick() {
		// TODO Auto-generated method stub
		x += velX;
		y += velY;
		
		x = Game.clamp(x, 0, Game.WIDTH - 33);
		y = Game.clamp(y, 0, Game.HEIGHT - 70);
		
		collision();
		iFrame --;
		if(iFrame <= 0) damaged = false;
		if (health == 0) {
			System.out.println("DEAD");

		}
		shootTimer--;
		
	}
	
	
	
	private void collision() {
		for(int i =0; i<handle.object.size(); i++) {
			GameObject tempObject = handle.object.get(i);
			
			if(tempObject.getID() == ID.Enemy) {
				
				if(getBounds().intersects(tempObject.getBounds())) {
					//collision code
					//tempObject.setHealth(tempObject.getHealth()-1);
					if(damaged == false) {
					health -=1;
					damaged = true;
					iFrame = 100;}
					
				}
				
			}
			if(tempObject.getID()== ID.Player) {
				if(tempObject.health == 0) {
				handle.removeObject(tempObject);
				handle.addObject(new PlayerGhost(tempObject.getX(),tempObject.getY(), ID.Player, handle));
				}
				
			}
			
			if(tempObject.getID()== ID.Player2) {
				if(tempObject.health == 0) {
				handle.removeObject(tempObject);
				handle.addObject(new PlayerGhost(tempObject.getX(),tempObject.getY(), ID.Player2, handle));
				}
				
			}
			
			
			
		}
	}
	
	

	@Override
	public void render(Graphics g) {
		// TODO Auto-generated method stub
		
		//Graphics2D g2d = (Graphics2D) g; // just so we can use draw
		//g.setColor(Color.red);
		//g2d.draw(getBounds());
		
		g.setColor(col);
		g.fillRect((int)x, (int)y, 32, 48);
		
	}



}
